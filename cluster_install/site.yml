---
- name: Provision the machines needed to bootstrap an openshift 4.1 cluster
  hosts: localhost
  gather_facts: False

  roles:
    # Download the installation program and set up the boot resources and ignition config
    - pre_install

    # Provision the machines TODO wrap these into loops
    - role: provision
      host_memory: 2
      sockets: 1
      node_type: haproxy
      machine_type: rhel
      hostname_prefix:
        - haproxy
        - api
        - api-int

    - role: provision
      host_memory: 16
      sockets: 4
      disk_size: 8
      node_type: bootstrap
      machine_type: rhcos
      hostname_prefix:
        - bootstrap

    - role: provision
      host_memory: 16
      sockets: 4
      disk_size: 40
      node_type: master
      machine_type: rhcos
      hostname_prefix:
        - master00
        - etcd-0

    - role: provision
      host_memory: 16
      sockets: 4
      disk_size: 40
      node_type: master
      machine_type: rhcos
      hostname_prefix:
        - master01
        - etcd-1

    - role: provision
      host_memory: 16
      sockets: 4
      disk_size: 40
      node_type: master
      machine_type: rhcos
      hostname_prefix:
        - master02
        - etcd-2

    - role: provision
      host_memory: 8
      sockets: 2
      disk_size: 20
      node_type: worker
      machine_type: rhcos
      hostname_prefix:
        - worker01

    - role: provision
      host_memory: 8
      sockets: 2
      disk_size: 20
      node_type: worker
      machine_type: rhcos
      hostname_prefix:
        - worker02

    - role: provision
      host_memory: 8
      sockets: 2
      disk_size: 20
      node_type: worker
      machine_type: rhcos
      hostname_prefix:
        - worker03


  # Now that all the machines have been provisioned we can configure haproxy (validation of the config will fail if machines are not set up correctly)
- name: Configure haproxy
  hosts: "haproxy.{{ cluster_name }}.internal.croftvillas.com"
  remote_user: root

  roles:
      # Role to install haproxy and configure it for the openshift cluster - requires in memory inventory from provisioning play above
    - haproxy_configure

- name: Wait for the bootstrap process to complete
  hosts: localhost
  gather_facts: False

  tasks:
    - name: Poll logs until bootstrap process is complete
      command: "./openshift-install --dir={{ cluster_name }} wait-for bootstrap-complete --log-level debug"

  # Once bootstrap is complete we can use rpm-ostree to install the RHEV guest agent and reboot the machines
- name: This playbook installs the guest agent on rhcos nodes
  hosts: worker:master:!bootstrap
  remote_user: core
  become: true

  vars:
    guest_agent: "http://rpmfind.net/linux/centos/7.6.1810/os/x86_64/Packages/qemu-guest-agent-2.12.0-2.el7.x86_64.rpm"

  tasks:
    - name: Install the guest agent on the new node
      command: "rpm-ostree install --idempotent {{ guest_agent }}"
      # Not sure whether we need to reboot the machines or not here
    - name: Reboot new host
      reboot:

  # Also on the decommissioning TODO bootstrap gets reprovisioned on second playbook run
- name: Decommission the bootstrap server and remove it from DNS
  hosts: localhost
  gather_facts: False

  roles:
    - role: decommission
      hostname_prefix:
        - bootstrap

  tasks:
    - name: Remove bootstrap server from haproxy config.
      lineinfile:
        regexp: "bootstrap"
        dest: /etc/haproxy/haproxy.cfg
        state: absent
      delegate_to: haproxy.{{ cluster_name }}.internal.croftvillas.com
      remote_user: root
      notify: Reload haproxy

      # There is a timing issue here - keep retrying for a minute
    - name: Patch the image registry
      command: "./oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch '{{ patch }}'"
      vars:
        patch: '{"spec":{"storage":{"emptyDir":{}}}}'
      environment:
        KUBECONFIG: ./{{ cluster_name }}/auth/kubeconfig
      retries: 10
      delay: 30
      register: result
      until: result.rc == 0

    - name: Wait for installation to finish
      command: "./openshift-install --dir={{ cluster_name }} wait-for install-complete --log-level debug"
      register: install_output

  handlers:
    - name: Reload haproxy
      systemd:
        name: haproxy
        state: reloaded
      delegate_to: haproxy.{{ cluster_name }}.internal.croftvillas.com
      remote_user: root
