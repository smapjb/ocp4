http://gateway.internal.croftvillas.com/rhcos-bios.gz
http://gateway.internal.croftvillas.com/rhcos-uefi.gz
http://gateway.internal.croftvillas.com/bootstrap.ign
http://gateway.internal.croftvillas.com/master.ign
http://gateway.internal.croftvillas.com/worker.ign

Use the following to upload to the iso domain from the RHEV manager.

engine-iso-uploader --iso-domain=QNAP_ISO upload rhcos-410.8.20190509.3-installer-kernel --force




iso://rhcos-410.8.20190509.3-installer-kernel

iso://rhcos-410.8.20190509.3-installer-initramfs.img

nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=vda coreos.inst.image_url=http://gateway/rhcos-uefi.gz coreos.inst.ignition_url=http://gateway/bootstrap.ign

nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=vda coreos.inst.image_url=http://gateway/rhcos-uefi.gz coreos.inst.ignition_url=http://gateway/worker.ign

nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=vda coreos.inst.image_url=http://gateway/rhcos-uefi.gz coreos.inst.ignition_url=http://gateway/master.ign


# Find a better place to source this
http://rpmfind.net/linux/centos/7.6.1810/os/x86_64/Packages/qemu-guest-agent-2.12.0-2.el7.x86_64.rpm

---- using buildah and podman to add a venv to the upstream tower container so we can use the latest ovirt modules.

<<< Dockerfile - note need some jiggery with subscription manager.
FROM registry.access.redhat.com/ansible-tower-35/ansible-tower:3.5.0
USER root
RUN yum install -y libcurl-devel nss-devel libxml2-devel gcc && \
    yum clean all && \
    rm -rf /var/cache/yum
RUN mkdir -p /var/lib/awx/venv/ansible_ovirt
RUN virtualenv --system-site-packages /var/lib/awx/venv/ansible_ovirt
RUN mkdir -p /var/lib/awx/venv/ansible_monkey
RUN virtualenv --system-site-packages /var/lib/awx/venv/ansible_monkey
RUN cp -a /var/lib/awx/venv/ansible/lib64/python2.7/site-packages/* /var/lib/awx/venv/ansible_ovirt/lib64/python2.7/site-packages/
RUN export PYCURL_SSL_LIBRARY=nss ; sh -c ". /var/lib/awx/venv/ansible_ovirt/bin/activate ; pip install --upgrade ovirt-engine-sdk-python ansible"
RUN yum erase -y libcurl-devel nss-devel libxml2-devel gcc && \
    yum clean all && \
    rm -rf /var/cache/yum

Commands to build this dockerfile assuming it is in folder tower_venv.
podman build ./tower_venv --squash
buildah tag <new_image_id> docker-registry-default.apps.internal.croftvillas.com/tower-prod/ansible-tower:3.5.0
podman login --authfile=/tmp/auth.json --tls-verify=false  -p <magic_token> -u unused docker-registry-default.apps.internal.croftvillas.com
podman push --authfile=/tmp/auth.json --tls-verify=false docker://docker-registry-default.apps.internal.croftvillas.com/tower-prod/ansible-tower:3.5.0

Where tower-prod is the namespace in openshift where my tower instance is running