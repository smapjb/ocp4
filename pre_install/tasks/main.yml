- include_vars: ../ovirt_Password.yml

- name: Create a directory if it does not exist
  file:
    path: "./{{ cluster_name }}"
    state: directory
  register: cluster_install_exists

- block:
  - name: Download the installer file
    unarchive:
      src: "{{ openshift_clients_url }}/openshift-install-mac-{{ cluster_version }}.tar.gz"
      dest: "./"
      remote_src: yes

  - name: fix up the install config
    template:
      src: templates/install-config.yaml.j2
      dest: "./{{ cluster_name }}/install-config.yaml"

  - name: Generate ignition files
    command: "./openshift-install create ignition-configs --dir={{ cluster_name }}"

  #  Prepare the http server and dns

  - name: Create the remote directory for cluster resources
    file:
      path: "/var/www/html/{{cluster_name }}"
      state: directory
      group: allusers
      mode: '0755'
    remote_user: root
    delegate_to: "{{ gateway }}"

  - name: Upload bootstrap, worker and master ignition files
    copy:
      src: "{{ cluster_name }}/{{ item }}"
      dest: "/var/www/html/{{ cluster_name }}/{{ item }}"
      group: allusers
      mode: '0644'
    remote_user: root
    delegate_to: "{{ gateway }}"
    with_items:
      - bootstrap.ign
      - master.ign
      - worker.ign

  - name: Download the bios image for the boot
    get_url:
      url: "{{ openshift_deps_url }}/rhcos-{{ cluster_version }}-x86_64-metal-bios.raw.gz"
      dest: "/var/www/html"
      group: allusers
      mode: '0644'
    remote_user: root
    delegate_to: "{{ gateway }}"

  # here we need to use the engine uploader on rhvm because no API upload for ISO domain
  - name: Add the kernel and ram disk images to the RHEV iso domain
    get_url:
      url: "{{ openshift_deps_url }}/{{ item }}"
      dest: "/tmp"
    remote_user: root
    delegate_to: "{{ rhev_manager }}"
    with_items:
      - "rhcos-{{ cluster_version }}-x86_64-installer-initramfs.img"
      - "rhcos-{{ cluster_version }}-x86_64-installer-kernel"

  # Note that I had to add passord to isouploader.conf, also ISO domain name is hard wired
  - name: Case insensitive password string match
    command: "engine-iso-uploader --iso-domain=QNAP_ISO upload /tmp/{{ item }} --force"
    remote_user: root
    delegate_to: "{{ rhev_manager }}"
    with_items:
      - "rhcos-{{ cluster_version }}-x86_64-installer-initramfs.img"
      - "rhcos-{{ cluster_version }}-x86_64-installer-kernel"
  when: cluster_install_exists.changed
