---
# tasks file for haproxy_configure
- include_vars: ../ovirt_Password.yml

- name: Determine if rhsm system cert exists
  stat:
    path: '{{ redhat_rhsm_cert_path }}'
  register: subscribed

- block:
  - name: Subscribe this system to the RHN
    redhat_subscription:
      state: present
      username: "pcornelius@redhat.com"
      password: "{{ rhn_password }}"
      pool_ids: 8a85f98460bfb0470160c2ff250f3e66

  - name: Disable all repositories
    command: subscription-manager repos --disable='*'
  - name: Enable RHEL server repositories
    command: subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-optional-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-rh-common-rpms

  - name: Install the ovirt-agent
    yum:
      state: latest
      name: rhevm-guest-agent-common
    notify: Start ovirt-agent
  - name: Make sure that the ovirt-guest-agent service is enabled on reboot
    service:
      name: ovirt-guest-agent
      enabled: yes

  - name: Ensure HAProxy is installed.
    yum: name=haproxy state=installed

  - name: Ensure Firewalld is installed.
    yum: name=firewalld state=installed

  - name: Enable selinux policy for the new ports
    seport:
      ports: 1936, 6443, 22623, 80, 443
      proto: tcp
      setype: http_port_t
      state: present

  - name: Ensure Firewalld is started and enabled on boot.
    service: name=firewalld state=started enabled=yes

  - name: Open up the firewall for the new service ports
    firewalld:
      port: "{{ item }}/tcp"
      permanent: true
      immediate: yes
      state: enabled
    with_items:
      - 1936
      - 6443
      - 22623
      - 80
      - 443

  - name: Get the IP address for HAProxy
    set_fact:
      haproxy_ip: "{{ ansible_facts.eth0.ipv4.address }}"

  - name: Construct the wildcard DNS and etcd svc-host priorities for the OCP cluster
    template:
      src: templates/dnsmasq_overlay.yaml.j2
      dest: /etc/dnsmasq.d/{{ cluster_name }}.conf
      mode: 0644
    remote_user: root
    delegate_to: "{{ gateway }}"

  - name: Restart DNS masq on ClearOS Gateway server to make sure DNS changes are in effect.
    systemd:
      name: dnsmasq
      state: restarted
    remote_user: root
    delegate_to: "{{ gateway }}"

  - name: Ensure HAProxy is started and enabled on boot.
    service: name=haproxy state=started enabled=yes
  when: subscribed.stat.exists | bool

- name: Configuration HAProxy from in memory inventory.
  template:
    src: templates/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c -q
  notify: reload haproxy
